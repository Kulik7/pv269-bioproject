<tool id="metaMDBG" name="metaMDBG" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
    <description>Assembler for long reads (e.g. PacBio HiFi, Nanopore r10.4)</description>

    <macros>
        <token name="@TOOL_VERSION@">1.0</token>
        <token name="@VERSION_SUFFIX@">0</token>
    </macros>

    <!-- <import>metaMDBG_macros.xml</import>
    <expand macro="bio_tools" /> -->

    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">metaMDBG</requirement>
    </requirements>

    <command detect_errors="exit_code"><![CDATA[
        metaMDBG asm \
            --out-dir . \
            #if $read_type.type == 'hifi'
                --in-hifi
                #for $r in $read_type.reads
                    '$r'
                #end for
            #elif $read_type.type == 'ont'
                --in-ont
                #for $r in $read_type.reads
                    '$r'
                #end for
            #end if
            --threads \${GALAXY_SLOTS:-1}
        #if str($generate_k_values) == "true"
            && metaMDBG gfa --assembly-dir . --k 0 > k_values.txt 2>&1
            awk '
                NR > 2 {
                    sub(/^[ \t]*-/, "", $0);
                    print $1 "\t" $2 " " $3;
                }
            ' k_values.txt > temp_file.txt && mv temp_file.txt k_values.txt
        #end if
    ]]></command>

    <inputs>
        <conditional name="read_type">
            <param name="type" label="Type of input reads" type="select">
                <option value="hifi">PacBio HiFi</option>
                <option value="ont">Nanopore ONT</option>
            </param>
            <when value="hifi">
                <param name="reads" type="data" format="fastq,fastq.gz" multiple="true"
                    label="HiFi reads" help="PacBio HiFi read files." />
            </when>
            <when value="ont">
                <param name="reads" type="data" format="fastq,fastq.gz" multiple="true"
                    label="Nanopore ONT reads" help="Nanopore R10.4+ read files." />
            </when>
        </conditional>
        <param name="generate_k_values" type="boolean" checked="false"
            label="Output possible k values for graph generation?"
            help="If enabled, the tool will output a list of valid k values for later graph generation." />

    </inputs>

    <outputs>
        <data name="contigs" format="fasta.gz" from_work_dir="contigs.fasta.gz"
            label="Assembled contigs" />
        <data name="k_values" format="txt" from_work_dir="k_values.txt"
            label="List of k values for GFA graph">
            <filter>generate_k_values</filter>
        </data>
    </outputs>

    <tests>
        <test expect_num_outputs="1">
            <param name="read_type|type" value="ont" />
            <param name="read_type|reads" value="test_ont.fastq.gz" />
            <output name="contigs" file="contigs.fasta.gz" compare="sim_size"
                delta="100" delta_frac="0.05" />
        </test>
    </tests>

    <help><![CDATA[ 

Program: metaMDBG (assembly of long metagenomics reads)
Version: 1.1
Contact: GaÃ«tan Benoit (gaetanbenoitdev@gmail.com)

Usage: metaMDBG [command]

command:
        asm: perform read assembly

    ]]></help>

    <citations>
        <citation type="doi">10.1038/s41587-023-01983-6</citation>
    </citations>
</tool>